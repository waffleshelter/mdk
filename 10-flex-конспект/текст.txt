левая колонка
HTML
<div class="container">
<div class="item1"></div>
<div class="item2"></div>
<div class="item3"></div>
<div class="item4"></div>
</div>

CSS
.container {display: flex}
Когда мы задаём какому-то элементу значение flex для свойства display, мы превращаем этот элемент в флекс-контейнер. Внутри него начинает действовать флекс-контекст, его дочерние элементы начинают подчиняться свойствам флексбокса.

CSS
.container {display: inline-flex}
Если контейнеру задано значение inline-flex, то снаружи он начинает вести себя как строчный (инлайн) элемент — размеры зависят только от внутреннего контента, встаёт в строку с другими элементами. Внутри это ровно такой же флекс-контейнер, как и при предыдущем значении.
Основные свойства

средняя колонка
Флекс-контейнер: элемент, к которому применяется свойство display: flex. Вложенные в него элементы подчиняются правилам раскладки флексов.

Флекс-элемент: элемент, вложенный во флекс-контейнер.

Основная ось: основная направляющая флекс-контейнера, вдоль которой располагаются флекс-элементы.

Поперечная (побочная, перпендикулярная) ось: ось, идущая перпендикулярно основной.
оси

Flex-direction - свойство управления направлением основной и поперечной осей.
.container {flex-direction: row;} - значение по умолчанию
Возможные значения:
row — основная ось идёт горизонтально слева направо, поперечная ось идёт вертикально сверху вниз.
row-reverse — основная ось идёт горизонтально справа налево, поперечная ось идёт вертикально сверху вниз.
column — основная ось идёт вертикально сверху вниз, поперечная ось идёт горизонтально слева направо.
column-reverse — основная ось идёт вертикально снизу вверх, поперечная ось идёт горизонтально слева направо.
row
1
2
3
row-reverse
1
2
3
column
1
2
3
column-reverse
1
2
3

Flex-wrap - перенос элементов внутри контейнера.
.container {flex-wrap: nowrap;} - значение по умолчанию
Установив значение wrap, мы можем изменить это поведение, и флекс-элементы будут иметь возможность перенестись в новый ряд, если не влезают в одну линию в рамках родителя. Ещё одно возможное значение — wrap-reverse. В этом случае элементы будут располагаться снизу вверх, заполнив собой сперва нижний ряд, а те, что не влезли, перепрыгнут в ряд выше.
wrap
1
2
3
nowrap
1
2
3
4
5
wrap-reverse
1
2
3
4
5
6
7
8
9

Flex-flow- это свойство-шорткат для одновременного определения значений свойств flex-direction и flex-wrap.
.container { display: flex; flex-flow: column wrap; }

Justify-content - свойство позволяет выравнивать флекс-элементы внутри флекс-контейнера по основной/главной оси (по горизонтали).
.container {justify-content: flex-start} - значение по умолчанию
Возможные значения:
flex-start - элементы прижимаются к краю, от которого начинается основная ось.
flex-end - элементы прижимаются к краю, у которого основная ось заканчивается.
center - элементы выстраиваются по центру родителя.
space-between — крайние элементы прижимаются к краям родителя, оставшиеся выстраиваются внутри контейнера равномерно, так, чтобы между ними были одинаковые отступы.
space-around — свободное пространство делится поровну между элементами и по половине от этой доли размещается по бокам от каждого элемента. Таким образом, между соседними элементами будет равное расстояние, а снаружи крайних элементов — по половине этого расстояния.
space-evenly — свободное место будет распределено так, чтобы расстояние между любыми двумя элементами было одинаковым и расстояние от крайних элементов до края было таким же.
flex-start
1
2
flex-end
1
2
3
center
1
2
3
space-between
1
2
3
space-around
1
2
3
space-evenly
1
2
3

Align-items - свойство выравнивания элементов внутри контейнера по поперечной оси (по вертикали).
.container {align-items: stretch} - значение по умолчанию
Возможные значения:
stretch (значение по умолчанию) — элементы растягиваются вдоль поперечной оси так, чтобы заполнить всего родителя. Это очень удобно, если вы делаете двухколоночный макет. Раньше приходилось при помощи разных костылей добиваться одинаковой высоты, а теперь достаточно сделать контейнер флексом, и колонки по умолчанию будут одной высоты.
flex-start или start — элементы выстраиваются у начала поперечной оси. Разница между ними лишь в том, что второе значение «уважает» направление чтения выбранного языка.
flex-end или end — элементы выстраиваются у конца поперечной оси. Разница между первым и вторым значениями аналогична предыдущему пункту.
center — элементы выстраиваются по центру поперечной оси.
baseline — элементы выравниваются по базовой линии текста. «Базовая линия» — baseline — воображаемая линия, проходящая по нижнему краю знаков шрифта (без учёта выносных элементов).
strtech
1
2
flex-start или start
1
2
3
flex-end или end
1
2
3
center
1
2
3
baseline
1
20
300

правая колонка
Дополнительные свойства

Gap - c помощью этого свойства можно с лёгкостью задавать отступы между строками и столбцами (между элементами). Является краткой записью свойств row-gap и column-gap.
Может иметь одно или два значения. Если указано только одно, то column-gap автоматически равен row-gap. Если указаны два значения, то первое будет задавать отступы между рядами (row-gap), а второе — между колонками (column-gap).

Order- меняет порядок отображения флекс-элементов внутри флекс-контейнера.
По умолчанию элементы отображаются в том порядке, в котором они расположены в разметке, а значение свойства order равно 0. Значение задаётся в виде целого отрицательного или положительного числа. Элементы встают по возрастающей.
.order1 {order: 5}
1
(order-5)
2
(order-4)
3
(order-2)
4
(order-1)
5
(order-3)

Flex-grow- указывает, может ли вырастать флекс-элемент при наличии свободного места, и насколько.
По умолчанию значение равно 0. Значением может быть любое положительное целое число (включая 0). Если у всех флекс-элементов будет прописано flex-grow: 1, то свободное пространство в контейнере будет равномерно распределено между всеми. Если при этом одному из элементов мы зададим flex-grow: 2, то он постарается занять в два раза больше свободного места, чем его соседи.
.item1 {flex-grow: 2}
1
2
3

Flex-shrink- полностью противоположно свойству flex-grow. Если в контейнере не хватает места для расположения всех элементов без изменения размеров, то свойство flex-shrink указывает, в каких пропорциях элемент будет уменьшаться.
Чем больше значение у этого свойства, тем быстрее элемент будет сжиматься по сравнению с соседями, имеющими меньшее значение. Значение по умолчанию — 1. Значением может быть любое целое положительное число (включая 0).

Align-self- выравнивает флекс-элементы текущей строки.
Отвечает за выравнивание отдельно взятого flex-элемента по высоте flex-контейнера. Переопределяет выравнивание, заданное align-items.
Возможные значения:
auto - значение по умолчанию. Flex-элемент использует выравнивание, указанное в свойстве align-items flex-контейнера.
flex-start - верхний край flex-элемента помещается вплотную с flex-линией (или на расстоянии, с учетом заданных полей margin и рамок border элемента), проходящей через начало поперечной оси.
flex-end - нижний край flex-элемента помещается вплотную с flex-линией (или на расстоянии, с учетом заданных полей margin и рамок border элемента), проходящей через конец поперечной оси.
center - поля flex-элемента центрируется по поперечной оси в пределах flex-линии.
baseline - fLex-элемент выравнивается по базовой линии.
stretch - сли поперечный размер flex-элемента вычисляется как auto и ни одно из поперечных значений margin не равно auto, элемент растягивается. Значение по умолчанию.
1,2,4 - align-items:flex-start, 3 - align-self: stretch;
1
2
3
4
1,2 - align-items:end, 3 - align-self: flex-start;
1
2
3
